{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","setPresupuesto","setRestante","setMostrarPregunta","useState","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","setGasto","setCrearGasto","nombre","setNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","setGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed5cf9fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({ mensaje }) => (\r\n    <p className='alert alert-danger error'>{mensaje}</p>\r\n);\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import React, { Fragment, useState } from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pregunta = ({ setPresupuesto, setRestante, setMostrarPregunta }) => {\r\n    // Definir el state\r\n    const [cantidad, setCantidad] = useState(0);\r\n    const [error, setError] = useState(false);\r\n\r\n    // Funcion que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        setCantidad(parseInt(e.target.value, 10));\r\n    };\r\n\r\n    // Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if (cantidad < 1 || isNaN(cantidad)) {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        // Si se pasa la validacion\r\n        setError(false);\r\n        setPresupuesto(cantidad);\r\n        setRestante(cantidad);\r\n        setMostrarPregunta(false);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n\r\n            {error ? <Error mensaje='El Presupuesto es Incorrecto' /> : null}\r\n\r\n            <form onSubmit={agregarPresupuesto}>\r\n                <input\r\n                    type='number'\r\n                    className='u-full-width'\r\n                    placeholder='Coloca tu presupuesto'\r\n                    onChange={definirPresupuesto}\r\n                />\r\n\r\n                <input\r\n                    type='submit'\r\n                    className='button-primary u-full-width'\r\n                    value='Definir presupuesto'\r\n                />\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPregunta.propTypes = {\r\n    setPresupuesto: PropTypes.func.isRequired,\r\n    setRestante: PropTypes.func.isRequired,\r\n    setMostrarPregunta: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pregunta;\r\n","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({ setGasto, setCrearGasto }) => {\r\n    const [nombre, setNombre] = useState('');\r\n    const [cantidad, setCantidad] = useState(0);\r\n    const [error, setError] = useState(false);\r\n\r\n    // Cuando el usuario agrega un gasto\r\n\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n\r\n        if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === '') {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        setError(false);\r\n\r\n        // construir el gasto\r\n\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate(),\r\n        };\r\n\r\n        // pasar el gasto al componente principal\r\n        setGasto(gasto);\r\n        setCrearGasto(true);\r\n\r\n        // Resetear el form\r\n        setNombre('');\r\n        setCantidad(0);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={agregarGasto}>\r\n            <h2>Agrega tus gastos aqu√≠</h2>\r\n\r\n            {error ? (\r\n                <Error mensaje='Ambos campos son oblgatorios o Presupuesto Incorrecto' />\r\n            ) : null}\r\n\r\n            <div className='campo'>\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type='text'\r\n                    className='u-full-width'\r\n                    placeholder='Ej. Comida'\r\n                    value={nombre}\r\n                    onChange={e => setNombre(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='campo'>\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type='number'\r\n                    className='u-full-width'\r\n                    placeholder='Ej. 300'\r\n                    value={cantidad}\r\n                    onChange={e => setCantidad(parseInt(e.target.value, 10))}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type='submit'\r\n                className='button-primary u-full-width'\r\n                value='Agregar Gasto'\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nFormulario.propTypes = {\r\n    setGasto: PropTypes.func.isRequired,\r\n    setCrearGasto: PropTypes.func,\r\n};\r\n\r\nexport default Formulario;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gasto = ({ gasto }) => (\r\n    <li className='gastos'>\r\n        <p>\r\n            {gasto.nombre}\r\n\r\n            <span className='gasto'>$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n);\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Gasto;\r\n","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({ gastos }) => (\r\n    <div className='gastos-realizados'>\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto => (\r\n            <Gasto gasto={gasto} key={gasto.id} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Listado;\r\n","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if (presupuesto / 4 > restante) {\r\n        clase = 'alert alert-danger';\r\n    } else if (presupuesto / 2 > restante) {\r\n        clase = 'alert alert-warning';\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n};\r\n\r\n// 100/4 > restante, quiere decir que gasto mas del 25%\r\n","import React, { Fragment } from 'react';\r\nimport { revisarPresupuesto } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ControlPresupuesto = ({ presupuesto, restante }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className='alert alert-primary'>\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ControlPresupuesto;\r\n","import { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n    // Definir el state\n    const [presupuesto, setPresupuesto] = useState(0);\n    const [restante, setRestante] = useState(0);\n    const [mostrarPregunta, setMostrarPregunta] = useState(true);\n    const [gastos, setGastos] = useState([]);\n    const [gasto, setGasto] = useState({});\n    const [crearGasto, setCrearGasto] = useState(false);\n\n    // useEffect que actualiza el restante\n    useEffect(() => {\n        if (crearGasto) {\n            // Agrega el nuevo presupuesto\n            setGastos([...gastos, gasto]);\n\n            // Resta del presupuesto actual\n            const presupuestoRestante = restante - gasto.cantidad;\n            setRestante(presupuestoRestante);\n\n            // resetear a false\n            setCrearGasto(false);\n        }\n    }, [gasto, crearGasto, gastos, restante]);\n\n    return (\n        <div className='container'>\n            <header>\n                <h1>Gasto Semanal</h1>\n\n                <div className='contenido-principal contenido'>\n                    {mostrarPregunta ? (\n                        <Pregunta\n                            setPresupuesto={setPresupuesto}\n                            setRestante={setRestante}\n                            setMostrarPregunta={setMostrarPregunta}\n                        />\n                    ) : (\n                        <div className='row'>\n                            <div className='one-half column'>\n                                <Formulario\n                                    setGasto={setGasto}\n                                    setCrearGasto={setCrearGasto}\n                                />\n                            </div>\n\n                            <div className='one-half column'>\n                                <Listado gastos={gastos} />\n\n                                <ControlPresupuesto\n                                    presupuesto={presupuesto}\n                                    restante={restante}\n                                />\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}